// Treść zadania #04 - NextAwesomeSCSSGrid
// - Wykorzystaj SASS oraz flexa, aby zrobić sobie grida a'la Bootstrap 4.
// - Grid ma być wg podejścia mobile first i ma mieć podział na 10 column - col-10 zajmuje 100% szerokości, col-1 zajmuje 10% szerokości.
// - Do wygenerowania klas związanych z kolumnami oraz szerokością ekranu użyj pętli for.
// - W klasach .flex-column i .flex-row domyślna pozycja elementów ma być na środku w pionie i w poziomie oraz domyślnie elementy nie mieszczące się w poprzednim wierszu mają przeskakiwać do następnych (wrap)
// - Klasy, które musisz wygenerować:
// - flex-column, flex-row
// - flex-sm-column, flex-sm-row, flex-md-column, flex-md-row, flex-lg-column, flex-lg-row, flex-xl-column, flex-xl-row
// - col-* (od col-1 do col-10)
// - col-sm-*, col-md-*, col-lg-*, col-xl-*
// - Po napisaniu kodu SASS wygeneruj plik CSS

.flex-row {
  display: flex;
  justify-content: center;
  flex-wrap: wrap;
  width: 100%;

  .flex-column {
    display: flex;
    justify-content: center;
    align-items: center;
    flex-basis: 150px;
  }

  @for $i from 1 through 10 {
    .col-#{$i} {
      border: 2px solid #000;
      box-sizing: border-box;
      display: flex;
      justify-content: center;
      align-items: center;
      height: 20px;
      margin: 10px;
      padding: 10px;
    }
  }

  @media all and (max-width: 576px) {
    .col-sm {
      background: red;
      // width: 100%;
    }
  }

  @media all and (min-width: 577px) and (max-width: 768px) {
    .col-md {
      background: pink;
    }
  }

  @media all and (min-width: 767px) and (max-width: 992px) {
    .col-lg {
      background: yellow;
    }
  }

  @media all and (min-width: 993px) {
    .col-xl {
      background: blue;
    }
  }



  .col-1 {
    flex-grow: 1;
  }

  .col-10 {
    flex-grow: 10;
  }
}
